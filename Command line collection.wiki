= Command line collection  =

== Image manipulation ==
* https://www.digitalocean.com/community/tutorials/workflow-resizing-images-with-imagemagick
* `convert -resize 100x100^ source.png dest.png` # Resize keeping aspect ratio
* `convert -resize 100x100^ -gravity center -extent 100x100 original.png new.png` # Resize, keep aspect ratio and canvas to match size
* `convert -background none -density 1000 -resize 1000x compass.svg compass.png` # Resize an svg, density is to get 1000px for svg, 1000x resize to width 1000 and calculate the height auto
* `convert -bordercolor none -border 10 origin.png dest.png` # Add a transparency border of 10px 

== SSL ==

* utiliser testssl.sh

== curl ==

* déclancher une action si le status change :
`watch -g [ $(curl -o /dev/null -s -w "%{http_code}\n" https://candidat.pole-emploi.fr/metierscope/) = "200" ] && docker-compose up -d --build`



* permet de tester un site sans pour autant que le nom soit dans un host ou un dns
`curl -I --resolve [domain name]:80:[ip] [URL]`

* suivre les redirections et silencieusement avec sortie sur STDIN
`curl -sL [URL]`

== tar ==

`tar -acvf monarchive.zst folder/`
l'option -a permet d'uiliser l'algorythme de compression reconnu dans l'extension du fichier

zstandard est l'algorithme utilisé pour la compression de l'image system de boot sous archlinux

== connexion réseau ==

* Nombre de connexion établie sur port 80
`netstat -an | grep 80 | grep ESTA | wc -l`

* Test débit
`wget -O - https://raw.github.com/sivel/speedtest-cli/master/speedtest_cli.py | python`

* Afficher son ip
`dig +short myip.opendns.com @resolver1.opendns.com`

== divers ==

* un lien sympa pour quelques astuces sur ansible : https://www.data-essential.com/ansible-how-to-collect-information-about-remote-hosts-with-gathers-facts/

* créer des liens symboliques pour tous les fichiers d'un dossier
`ln -s ~/src/phpqa/bin/* -t .` #se mettre dans le dosser de destination

* Virtual Box

unregister all vm :
`vboxmanage list vms | cut -d" " -f2 | sed 's/{\(.*\)}$/vboxmanage unregistervm \1/g' | sh`

* *Créer un tunnel SSH*

l'option -nNT => sans terminal, 9000 port local et 80 le port distant

`$ ssh -nNT -L 9000:imgur.com:80 user@example.com`

* ssh config avec commande de proxy

{{{
Host host
  Hostname host.name
  User myname
  IdentityFile ~/.ssh/id_rsa
  ProxyCommand ssh hostwithpubkeytoconnecto -W %h:%p
}}}

* Copier sa clé publique depuis vim
`:read !curl -sL {URL TO PUBLIC KEY}`

* *Un simple calcul*
`expr 2 + 5`
ou
`bc <<< 2+5`

* *Mode caluclatrice*
{{{ 
bc << .
1+2
.+3
.+4
.
}}}

* *Impression*
`lpstat` pour voir la liste
`lprm -` pour effacer la liste d'attente
`lpr -o lansdcape myfile.txt` pour imprimer en mode paysage

* téléchargé un fichier en ligne de commande depuis le ftp
`wget ftp://seojmp:mdp@ftp.jobintree.com/sitemap.xml`

* voir les connexions
`sudo /usr/sbin/tcpdump -vlnettti pflog0` (ou pflog0 est l'interface reseau)

* joindre des lignes d'une sortie de commande comme 'grep' par exemple
`paste -s -d","` #séparer par des virgules

== xterm-termite ==

manual : https://github.com/thestinger/termite

* Insert mode
`ctrl-shift-x` activate url hints mode
`ctrl-shift-r` reload configuration file
`ctrl-shift-c` copy to CLIPBOARD
`ctrl-shift-v` paste from CLIPBOARD
`ctrl-shift-u` unicode input (standard GTK binding)
`ctrl-shift-e` emoji (standard GTK binding)
`ctrl-tab` start scrollback completion
`ctrl-shift-space` start selection mode
`ctrl-shift-t` open terminal in the current directory [1]
`ctrl-shift-up` scroll up a line
`ctrl-shift-down` scroll down a line
`shift-pageup` scroll up a page
`shift-pagedown` scroll down a page
`ctrl-shift-l` reset and clear
`ctrl-+` increase font size
`ctrl--` decrease font size
`ctrl-=` reset font size to default


== Fondamentaux linux ==

Des commandes :
* blkid
* fuser -vm <fichier> => pour voir le lien fichier / process
* file <fichier> => pour savoir si on est en 32bit ou 64bit
* script stocké les commandes avec leur resultat
* tac commande inverse de cat !!!

Pour avoir les vraies stats de perf disque utiliser la commande dd

Diff entre zip et tar => le zip ne sauvegarde pas les liens

Les mots de passes : dans shadow => la première parties est le sel qui sera utilisé pour reconnaitre le mdp donné. Le sel est généré aléatoirement.

Les jobs :

kill -l #liste des différents kill
kill -18 #met en suspend pareil que Ctrl-Z
kill -19 #remet en march

liste des jobs lancé par le user:
jobs

kill -3 %1 => quit le job 1 (3 => kill pour quitter proprement)


Processus Zombie : si un parent est tué alors que son fils ne l'est pas

for i in (seq 1 5); do ({quelque chose}); done

/var/run ou /run ou /opt => dossier type tmpfs pour stocker le PID d'un exec entre autre

Utilisation de foremost pour retrouver les fichiers effacé
foremost all /dev/sda

=== Création d'une image disk ===

sudo dd if=/dev/zero of=/media/sf_partage/VHD.img bs=1M count=1200
mkfs -t ext4 /media/sf_partage/VHD.img
sudo mkdir /mnt/VHD/
sudo mount -t auto -o loop /media/sf_partage/VHD.img /mnt/VHD/




=== Linux Avancé ===

Systeme de stockage HDFS => système distribué
tune2fs -l /dev/sda1 pour voir tous le détail d'un disque

Toutes les infos d'un processus => /proc/[num proc]/
more /proc/1/

Exemple pour vor pourquoi une appli plante :
on lance une appli avec un kill -19, on regarde /proc/num appli PID/maps et on relance kill -18 et on voit où çà plante

Fichier utiles maps et status

Voir ce que contient l'intrd.img,
L'initrd de démarage est un system monté en mémoire pour lancer le system.
Il se trouve dans le boot.

Exemple pour archlinux :
1. on copie l'image initramfs-linux.img sur son home ou dossier temporaire
2. avec un file on regarde ce que sait => file initramfs-linx.img
3. sur arch c'est avec zstd donc zstd -d initramfs-linux.img
4. zstd -o init_tmp -d initramfs-linux.img
5. file init_tmp => type cpio archive (vielle archive pour stockage sur bande)
6. cpio -imdF init_tmp
7. vim init => le fichier d'initialisation 


strace ls => pour savoir ce quand çà passe si çà plante (dernière ligne)
