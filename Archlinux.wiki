= Archlinux =

Mes notes sur l'installation d'Archlinux
 

== Installation from scratch ==
 * Attention de ne pas lancer l'utilitaire de partitionnement sur une partition mais bien sur le disque lui même
 * Pour le macbook voir https://wiki.archlinux.org/index.php/MacBook
 * Un lien plus récent avec cryptage du disque et partition LVM http://loicpefferkorn.net/2015/01/arch-linux-on-macbook-pro-retina-2014-with-dm-crypt-lvm-and-suspend-to-disk/
  
=== Notes à propos de VMware et Virtualbox ===
 * pb sur le driver video suite à l'upgrade -> obligé de réinstaller les anciens pilotes
   ex : `pacman -U /var/cache/pacman/pkg/xf86-video-intel-2.99.912-1-x86_64.pkg.tar.xz`
   
== Customisation ==

=== Installation de yaourt ===
Dans /etc/pacman.conf :
{{{
[archlinuxfr]
SigLevel = Never
Server = http://repo.archlinux.fr/$arch
}}}
puis installer avec `pacman -Sy yaourt`

=== Les paquets indispensables ===

 * urxvt terminal + urxvt-perls
 * [[https://github.com/ervandew/urxvt-vim-scrollback|urxvt-vim-scrollback]]
 * i3-wm gestionnaire de fenêtre
 * dmenu2
 * dunst + libnotify pour avoir des notifications
 * dwb ou vimb comme navigateur web
 * feh pour gérer l'image du fond
 * hot-solarized-vi pour un top colorisée avec raccourcis vi
 * slim pour avoir un écran de login
 * llpp-git pour visualiser des pdf
 * otf-inconsolata-powerline-git (police avec support powerline)
 * otf-powerline-symbols-git (police avec support powerline)
 * ttf-bitstream-vera
 * pinta logiciel de retouche image
 * pommed-light pour gérer les touches mac sons/lumieres
 * xclip & xsel & xclipboard & clipmenud pour gérer les copier/collé
 * nuvolaplayer pour la musique en ligne
 * unclutter pour masquer la souris
 * mutt pour les mails
 * urlview pour les liens dans les mails
 * mps-youtube pour une cli youtube
 * pulseaudio-alsa + libpulse-raop2 (airplay)  
 * paprefs + pavucontrol (gui control for pulseaudio)
 * rainbowstream twitter cli client (via pip)
 * newsbeuter rss cli lcient
 * iftop
 * remmina
 * wego meteo dans le terminal
 * socat (pour utiliser les socket de vimb)
 * googlecl
 * fortune-mod
 * pm-utils (hibernate & suspend)
 * inotify-tools
 * rtv (reddit terminal viewer)
 * pyradio
 * blueman
 * insync (google drive)
 * scrot pour les screenshot
 * cmus cli pour la musique
 * mpd + vimpc-git cli pour la musique
 * tig pour la gestion de dépots git
 * FontManager pour visualiser les polices installées
 * Xbindkeys pour mapper des touches du clavier sous session X

==== Faire le ménage ====

- Voir la place libérée : `sudo paccache -d`
- Supprime le cache et garde les 3 dernières versions : `sudo paccache -r`

=== I3 window manager ===

 * i3pystatus-git pour des infos dans la barre de menu

==== Faire un workspace par application ====

Créer un fichier executable au nom de l'application à lancer dans dmenu
{{{
#!/bin/sh
ISRUNNING=$( ps -eo cmd | grep -c '[u]rxvt -title reddit' )
i3-msg -t command "workspace reddit; exec [ $ISRUNNING -eq 0 ] && urxvt -title reddit -e rtv"
}}}

Mettre ce fichier dans un repertoire qui se trouve dans le PATH (pour moi il s'agit de ~/share/bin)
Utiliser dmenu pour lancer l'application ou switcher dessus.

=== Police de caractère ===

 * ttf-meslo-powerline
 * icons
 * ttf-fontawesome
 * utilitaire de gestion/visualisation de police : FontManager

=== Thème Solarized, airline et GTK ===

=== Wifi démarriage auto du wifi ===

 * `netctl enable {nom du profil}`
 * pour trouver le nom du profil actif et des autres : `netctl list`

=== Configuration du clavier ===

 * générer le fichier ~/.Xmodmap : `xmodmap -kpe > ~/.Xmodmap`
 * éditer le fichier ~/.Xmodmap pour modifier les touches par défaut
 * voir la fin du fichier pour voir comment modifier le comportement de la touche caps
 * `xmodmap ~/.Xmodmap` pour appliquer les changements
 * Pour ne pas eéteindre directement via la touche power : dans `/etc/systemd/logind.conf` mettre `HandlePowerKey=ignore` puis assigner pour i3 la touche 124 dans .Xmodmap (voir https://wiki.archlinux.org/index.php/I3#Shutdown.2C_reboot.2C_lock_screen )

=== Ajout d'un résolution écran ===

 * `cvt 1280 1024`
 * `xrandr --newmode "1280x1024" {suivi du reste de la 2eme ligne resultant de cvt}`
 * `xrandr --addmode {ecran cible} 1280x1024`
 * `xrandr --ouput {ecran cible} --mode 1280x1024`
Plus d'info : https://wiki.archlinux.org/index.php/Xrandr

=== Barre de status ===

 * [[configuration de i3pystatus-git]]  

=== Barre de lancement ===

 * installation de dmenu-xft-height puis customisation dans ~/.config/i3/config :
   `bindsym $mod+d exec dmenu_run -i -nb '#859900' -nf '#eee8d5' -sb '#cb4b16' -fn 'Meslo LG S DZ for Powerline-10' -h 24`

=== Configuration des touches spéciales ===

 * voir le fichier `/etc/acpi/handler.sh`
 * pour savoir le nom de la touche a utilisé dans le handler.sh : `acpi_listen` et appuyer sur la touche

=== Ajout de règle udev ===

 Lancer un script à la connexion/deconnexion d'un périphérique :
 * voir https://wiki.archlinux.org/index.php/udev
 * créer un script se terminannt par .rules
 * copier un script déjà existant : /usr/lib/udev/rules.d/70-power-switch.rules
 * voir les infos du device `# udevadm info -a -p /sys/class/backlight/acpi_video0`
 * modfier la régle copier avec les info récupérée
 * faire `udevadm trigger` si la règle n'est pas prise en compte
 * si la règle ne fonctionne pas faire un `# udevadm test $(udevadm info -q path -n [device name]) 2>&1`

=== Installation Trackpad ===

==== Ligne de commande ====
 * voir https://wiki.archlinux.org/index.php/bluetooth
 * et voir http://support.apple.com/kb/HT2845
   Turn on the Magic Trackpad by pressing the on/off button until the indicator light comes on. The indicator light glows steadily for 2 to 3 seconds to indicate the batteries are good. After that, the light will blink to indicate your trackpad is in discovery mode.
 * ajouter une [[conf X11 trackpad]]
 * si le trackpad ne fonctionne pas il faut à nouveau le jumeler en lançant `bluetoothctl`
 {{{
    remove 60:C5:47:81:AC:AD 
    agent on
    default-agent
    scan on
    pair 60:C5:47:81:AC:AD 
    trust 60:C5:47:81:AC:AD 
    connect 60:C5:47:81:AC:AD 
 }}}
 
==== Interface graphique ====
 * le plus simple reste de passer par une interface graphique : blueman-manager
 * Si même pb pour reconnecter essayer `sudo hciconfig hci0 reset`
 * Puis faire installation...
 * pour info la connexion se fait avec Human Interface Device
 

=== Installation d'une imprimante réseau ===

 * installer le paquet cups
 * éditer le fichier /etc/cups/client.conf pour ajouter l'ip de l'imprimante
 * dans .xinitrc ajouter la varibale PRINTER={nom de l'imprimante}
 * pour tester si l'imprimante est bien installé : `lpstat -p -d`
 * pour imprimer un fichier `lpr filename`
 
=== Connexion Freebox OpenVPN ===
    ==== Configuration ====
     * copier le fichier utilisateur de la freebox  `cp ~/downloads/config_openvpn_bridge_{$USER}.ovpn /etc/openvpn/freebox.conf`
     * créer le fichier reseau pour [[openvpnclient]] pour l'interface virtuel dans `/etc/netctl` voir https://wiki.archlinux.org/index.php/OpenVPN_Bridge (mais ne pas installer le fichier bridge que tap)
     * démarrer l'interface `netctl enable openvpn_tap`
    ==== Demarrage ====
     * démarrer le service `systemctl start openvpn@freebox.service`
     * puis `dhcpd tap0` pour obtenir une ip
     * si pb pour obtenir l'adresse ip, redémarrer faire un `systemctl restart dhcpcd`

=== Connexion VPN PPTP ===
    ==== Configuration ====
    * voir les fichiers dans /etc/ppp/peers 
    * ajout d'une nouvelle conf en cli : `pptpsetup --create-tunel {nom_de_la_connecion} --server {IP_NAME} --login {login} --password {pass} encrypted`
    ==== Démarriage ====
    * `pon {nom_de_la_connection}`
    * `poff` pout arréter la connexion

=== Changer le navigateur web par défault ===

 * installer `xdg-utils`
 * mettre dans .zshrc `export BROWSER=xdg-open`
 * créer le dossier pour les application associées au mimes types `mkdir ~/.local/share/applications`
 * créer le fichier vimb.desktop
    {{{
    #!/usr/bin/env xdg-open
    [Desktop Entry]
    Version=1.0
    Terminal=false
    Type=Application
    Name=Vimb
    Exec=i3-msg -t command workspace 2:web; layout tabbed; exec /usr/bin/vimb
    NoDisplay=true
    }}}
 * mettre ce fichier dans le dossier `applications` créer précedemment
 * puis executer la commande `dg-mime default vimb.desktop x-scheme-handler/http` pour avoir vimb par défaut
 * il est possible aussi d'éditer le fichier `~/.config/mimeapps.list` pour modifier les applications par défaut lancées par `xdg-open`
 * plus d'info : https://wiki.archlinux.org/index.php/xdg-open#Set_the_default_browser et https://wiki.archlinux.org/index.php/Default_applications#MIME_types_and_desktop_entries

=== Régler un pb (TODO)===

 * journal des événements `journalctl -xn`
 * `journalctl -f` pour voir tous ce qui se passe
 * `journalctl -n -u bluetooth` pour voir les derniers logs concernant le bluetooth
 * `systemctl status acpid` pour voir l'état d'un service

==== Example de résolution d'un pb ====
acpid ne semblait ne pas fonctionner :
 * il m'a fallu arrêter le service `sudo systemctl stop acpid`
 * et le faire fonctionner en mode debug -d sans socket -S et en avant plan -f et en mode daemon : `sudo acpid -ldfS` et là j'ai pu voir ce qui ne fonctionnait pas.
 * ou bien changer directement dans le fichier de service acpid (pour savoir faire un disable/enable du service)
 * pb avec acpid pour X ne peut utiliser xrandr directement car il lui manque un context (DISPLAY et XAUTHORITY) et avec le script hotplug_monitor.sh idem voir https://bbs.archlinux.org/viewtopic.php?id=186179 pour un début de solution

=== Boot ===

 * utilisation partition 200MB en FAT32 monté sur /boot
 * `mkinitcpio -p linux` pour génére l'image initrd - si pas présente
 * utilisation de gummiboot `gummiboot --path=/boot/ install`
 * créer la configarution (/boot/loader/loader.conf et /boot/loader/entries/arch.conf)
 * voir [[https://wiki.archlinux.org/index.php/gummiboot|gummiboot]]
 * sur OS X pour rendre bootable la partition : `mkdir /Volumes/EFI-arch && mount -t vfat /dev/sdb1 && sudo bless --mount=/Volumes/EFI-arch` (A vérifier)

=== Syncthing ===
 * pour installer le service : `sudo systemctl enable syncthing@david`
 * pour démarrer : `systemctl start syncting`
 * pour voir l'interface `http://127.0.0.1:8080`
 * via un tunnel SSH `ssh -nNT -L 9999:127.0.0.1:41989 do.tyjak.net` (port 9999 pour le web)

== Gdrive ==
 * installation : http://beaveris.me/mount-google-drive-in-archlinux-without-syncing/
 * mount : `google-drive-ocamlfuse -label Gdrive-archlinux ~/gdrive`

=== Son ===
Mise en place du son pour une sortie sur un périphérique airplay
==== installation ====
installer les packets :
 * pulseaudio-alsa + libpulse-raop2 (airplay)  
 * paprefs + pavucontrol (gui control for pulseaudio)
démarriage auto : `systemctl --user enable pulseaudio`
==== utilisation ====
régler le préférences pour pouvoir découvrir les périfériques airplay avec `paprefs` et lancer `pavucontrol` pour régler la sortie son.
==== troubleshooting ====
il faut que le daemon avahi-daemon soit démarré pour que les périphériques puissent être découvrables
si le airplay ne s'affiche pas voir http://raspberrypi.stackexchange.com/questions/5508/redirect-audio-to-another-airplay-device
commandes utiles :

{{{
pulseaudio --start --log-target=syslog -vvvv --log-level=debug
pacmd load-module module-raop-discover
pacmd list-sinks | grep name
}}}

Pour le problème du son qui se remet à 100% voir https://bbs.archlinux.org/viewtopic.php?pid=1103037#p1103037

=== Teamviewer ===
Pour lancer teamviewer il faut tout d'abord lancer le daemon :
`teamview --daemon start`
Puis le client par la suite via dmenu

=== Montage de disque ===

Si problème pour monter un disque distant, s'assurer que rpcbind.service est démarré
`sudo systemctl enable rpcbind.service`
`sudo systemctl start rpcbind.service`

=== TODO ===

 * ajouter les packages `perl-json-xs` et `perl-anyevent` pour pouvoir enregistrer des layout i3
 * command pour sauvegarder un layout `i3-save-tree --workspace console > ~/.config/i3/workspace_console.json`
 * voir pour utiliser gpg et automatiser le lancement de l'agent gpg ou ssh [[https://github.com/ervandew/dotfiles/blob/master/.xinitrc|example de conf]]
 * Supprimer ario et floola
 
== Tips ==
 * visualisation de photos - images : `feh -. {rep photo}`
