= Taskwarrior || project:archlinux +home =

Lien utiles : /home/david/vimwiki/Taskwarrior.wiki

== TODO | +todo and +tw ==
* [ ] tester des plugins  #e1c1874a
    * [X] https://github.com/Aerex/icaltask pour ajouter des taches dans une todo ios  #33267bd9
    * [X] https://github.com/nasoym/task_tools tcal pour avoir les taches sur un calendrier  #11ddb5ad
    * [X] https://github.com/jschlatow/taskopen pour lier une task à un lien ou fichier  #89a47a64
    * [ ] https://github.com/Spredzy/ics2task pour importer un évenement ics  #19cbbbab
    * [ ] https://github.com/theunraveler/taskwarrior-web pour une interface web auto hébergée  #fa435d68
* [ ] Avoir un server taskd et une interface web pour ne plus dépendre d'un tiers  #c9a765c6
* [ ] Revoir le schéma des couleurs  #e06a510d
* [ ] Tester les taches récurrentes https://taskwarrior.org/docs/recurrence/  #92cc0d96
* [ ] Réoganiser les taches homes par projet  #41ba612a
* [o] Remplacer le calendrier pal pour un équivalent qui utilisé taskwarrior comme backend  #543aa71c
    * [X] ne permet pas de faire grand chose avec tw, importe tout sans distinction...  #20604790
    * [X] voir si possible d'utiliser pal et de synchroniser...  #315e4fcb
* [ ] ajout de notification pour les tache avec une due date  #ded65e1e
* [ ] Faire des raccourcis pour alimenter taskwarrior  #80fbda00
* [ ] Mettre en commun la conf de wingtask via share  #e9598b5c

== Synchro avec Trello ==

voir https://github.com/ogarcia/trellowarrior
NOTE: impossible se synchroniser un tableau qui nous nous appartient pas

== Quelques commandes ==

    * `task calendar` pour afficher un calendrier des taches
    * `task 1 modify due:eoww` modification de la date au denier jour de travail de la semaine
    * `task 1 modify wait:due` la tache ne sera pas présente dans la due list mais afficher le jour de la date
    * `task $(task end.before:today-4wk uuids) delete` supprime les taches complétées de plus de 4 semaines

== Synonymes dates ==
    * now 						Current local date and time.
    * today 					Current local date, with time 00:00:00.
    * sod 						Local date of the start of the next day, with time 00:00:00. Same as tomorrow.
    * eod 						Current local date, with time 23:59:59.
    * yesterday                 Local date for yesterday, with time 00:00:00.
    * tomorrow 					Local date for tomorrow, with time 00:00:00. Same as sod.
    * monday,tuesday ...        Local date for the specified day, after today, with time 00:00:00.
    * january,february ...      Local date for the specified month, 1st day, with time 00:00:00.
    * later,someday             Local 2038-01-18, with time 00:00:00. A date far away, with semantically meaningful to GTD users.
    * soy 						Local date for the next year, January 1st, with time 00:00:00.
    * eoy 						Local date for this year, December 31st, with time 00:00:00.
    * soq 						Local date for the start of the next quarter (January, April, July, October), 1st, with time 00:00:00.
    * eoq 						Local date for the end of the current quarter (March, June, September, December), last day of the month, with time 23:59:59.
    * som 						Local date for the 1st day of the next month, with time 00:00:00.
    * socm 						Local date for the 1st day of the current month, with time 00:00:00.
    * eom,eocm                  Local date for the last day of the current month, with time 23:59:59.
    * sow 						Local date for the next Sunday, with time 00:00:00.
    * socw 						Local date for the last Sunday, with time 00:00:00.
    * eow,eocw                  Local date for the end of the week, Saturday night, with time 00:00:00.
    * soww 						Local date for the start of the work week, next Monday, with time 00:00:00.
    * eoww 						Local date for the end of the work week, Friday night, with time 23:59:59.
    * 1st,2nd, ...              Local date for the next Nth day, with time 00:00:00.

== Manupulation de dates ==
    * `task calc eoww` pour évoluer une date
    * `task calc due-2days` date moins 2 jours avec la due date
    * `task XXXX due:eoww+7d` dernier jour de travail de la semaine + 7 jours

== Taskwarrior-tui ==

Quelques commandes utilse:
* `A` pour mettre une annotation
* `t` pour ajouter/enlever le tag 'next'

== Autour de Taskwarrior ==
    * vit interface avec raccourci vim
    * Taskwarrior-tui
